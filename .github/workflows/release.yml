name: Release
on:
  push:
    tags:
      - '*.*.*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        # NOTE: Fetch full history for Sentry release
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to the registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up metadata (default)
        id: meta-default
        uses: docker/metadata-action@v3
        with:
          images: dipdup/dipdup
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}
            type=pep440,pattern={{major}}.{{minor}}

      - name: Set up metadata (pytezos)
        id: meta-pytezos
        uses: docker/metadata-action@v3
        with:
          images: dipdup/dipdup
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}-pytezos
            type=pep440,pattern={{major}}-pytezos
            type=pep440,pattern={{major}}.{{minor}}-pytezos

      - name: Set up metadata (slim)
        id: meta-slim
        uses: docker/metadata-action@v3
        with:
          images: dipdup/dipdup
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}-slim
            type=pep440,pattern={{major}}-slim
            type=pep440,pattern={{major}}.{{minor}}-slim

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Poetry
        uses: snok/install-poetry@v1
        with:
          version: '1.4.0'

      - name: Install project
        run: make install
      - name: Run lint
        run: make lint
      - name: Run tests
        run: make test

      - name: Publish stable image (default)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-default.outputs.tags }}
          labels: ${{ steps.meta-default.outputs.labels }}
          build-args: DIPDUP_DOCKER_IMAGE=default


      - name: Publish stable image (pytezos)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-pytezos.outputs.tags }}
          labels: ${{ steps.meta-pytezos.outputs.labels }}
          build-args: DIPDUP_DOCKER_IMAGE=pytezos

      - name: Publish stable image (slim)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.slim
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-slim.outputs.tags }}
          labels: ${{ steps.meta-slim.outputs.labels }}

      - name: Publish package on PyPi
        run: |
          poetry config http-basic.pypi __token__ ${{secrets.PYPI_TOKEN}}
          poetry build
          poetry publish

      - name: Parse changelog
        id: changelog
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ github.ref_name }}

      - name: Publish GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ steps.changelog.outputs.version }}
          body: |
            ## ${{ steps.changelog.outputs.version }} - ${{ steps.changelog.outputs.date }}

            ${{ steps.changelog.outputs.changes }}
          draft: true
          prerelease: ${{ steps.changelog.outputs.status == 'prereleased' }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        with:
          version: ${{ steps.changelog.outputs.version }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: sentry
          SENTRY_PROJECT: dipdup
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
