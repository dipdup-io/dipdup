name: Release
on:
  push:
    tags:
      - "*.*.*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.x"

      - name: Set up Poetry
      - uses: snok/install-poetry@v1
        with:
          version: "1.1.13"

      - name: Install project
        run: make install
      - name: Run lint
        run: make lint
      - name: Run tests
        run: make test

      - name: Generate semver labels
        uses: paulhatch/semantic-version@v4.0.2
        id: version
        with:
          tag_prefix: ""
          format: "${major}.${minor}.${patch}"

      - name: Set up enviroment
        run: |
          echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
          echo ::set-env name=MAJOR_VERSION::${{ steps.version.outputs.major }}
          echo ::set-env name=MINOR_VERSION::${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}

      - name: Publish Docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: dipdup/dipdup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.RELEASE_VERSION }},${{ env.MAJOR_VERSION }},${{ env.MINOR_VERSION }}"

      - name: Publish Docker image (-pytezos)
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          EXTRAS: pytezos
        with:
          name: dipdup/dipdup
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.RELEASE_VERSION }}-pytezos,${{ env.MAJOR_VERSION }}-pytezos,${{ env.MINOR_VERSION }}-pytezos"
          buildargs: EXTRAS

      - name: Publish package on PyPi
        run: |
          poetry config http-basic.pypi __token__ ${{secrets.PYPI_TOKEN}}
          poetry build
          poetry publish

      - name: Publish GitHub release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false


