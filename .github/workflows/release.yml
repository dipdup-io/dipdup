name: Release
on:
  push:
    tags:
      - "*.*.*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to the registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: dipdup/dipdup
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}
            type=pep440,pattern={{major}}.{{minor}}

      - name: Set up metadata (-pytezos)
        id: meta-pytezos
        uses: docker/metadata-action@v3
        with:
          images: dipdup/dipdup
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}-pytezos
            type=pep440,pattern={{major}}-pytezos
            type=pep440,pattern={{major}}.{{minor}}-pytezos

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.x"

      - name: Set up Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.1.13"

      - name: Install project
        run: make install
      - name: Run lint
        run: make lint
      - name: Run tests
        run: make test

      - name: Publish image on Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Publish image on Docker Hub (-pytezos)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta-pytezos.outputs.tags }}
          labels: ${{ steps.meta-pytezos.outputs.labels }}
          build-args: EXTRAS=pytezos

      - name: Publish package on PyPi
        run: |
          poetry config http-basic.pypi __token__ ${{secrets.PYPI_TOKEN}}
          poetry build
          poetry publish

      - name: Publish GitHub release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false


