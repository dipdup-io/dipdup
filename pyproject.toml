[project]
name = "dipdup"
description = "Modular framework for creating selective indexers and featureful backends for dapps"
version = "8.0.0"
license = { text = "MIT" }
authors = [
    { name = "Lev Gorodetskii", email = "dipdup@drsr.io" },
    { name = "Vladimir Bobrikov", email = "vladimir_bobrikov@pm.me" },
    { name = "Michael Zaikin", email = "mz@baking-bad.org" },
    { name = "Igor Sereda", email = "sereda.igor.s@gmail.com" },
]
maintainers = [
    { name = "Lev Gorodetskii", email = "dipdup@drsr.io" },
    { name = "Vladimir Bobrikov", email = "vladimir_bobrikov@pm.me" },
    { name = "Igor Sereda", email = "sereda.igor.s@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
keywords = [
    "api",
    "backend",
    "blockchain",
    "crypto",
    "cryptocurrencies",
    "dapp",
    "declarative",
    "ethereum",
    "evm",
    "framework",
    "indexer",
    "indexers",
    "michelson",
    "scheduler",
    "sdk",
    "smart-contracts",
    "tezos",
    "tzkt",
    "web3",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]

dependencies = [
    # NOTE: Core dependencies; keep pinned between major versions.
    "datamodel-code-generator~=0.25.7",
    "pydantic~=2.7",
    "tortoise-orm==0.21.5",
    "web3~=6.19",
    #
    # FIXME: KeyError in _make_or_get_ssl_context
    "aiohttp==3.10.2",
    "aiolimiter~=1.0",
    "anyio~=4.1",
    "APScheduler~=3.8",
    "async-lru~=2.0",
    "asyncpg~=0.29",
    "click~=8.0",
    "eth-abi>=5.0.1,<6",
    "orjson~=3.9",
    "prometheus-client~=0.17",
    "pycryptodome~=3.17",
    "pyhumps~=3.0",
    "pysignalr~=1.0",
    "python-dotenv~=1.0",
    "python-json-logger>=2.0.7",
    "ruamel.yaml~=0.17",
    "sentry-sdk~=2.5",
    "sqlparse~=0.4",
    "starknet-py~=0.22",
    "strict-rfc3339~=0.7",
    "survey~=5.3",
    "tabulate~=0.9",
    "uvloop>=0.19.0",
]

[tool.pdm.resolution.overrides]
# NOTE: Update blocked by web3; safe to override (see https://github.com/ethereum/web3.py/pull/3144)
lru-dict = "1.3.0"
# NOTE: tortoise-orm
aiosqlite = "0.20.0"

[project.urls]
Homepage = "https://dipdup.io/"
Documentation = "https://dipdup.io/docs"
Repository = "https://github.com/dipdup-io/dipdup"

[project.scripts]
dipdup = "dipdup.cli:cli"

[tool.pdm.dev-dependencies]
lint = [
    "black",
    "mypy",
    "ruff",
    "types-pytz",
    "types-tabulate",
]
test = [
    "docker",
    "pytest~=7.4",
    "pytest-aiohttp",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-xdist",
]
docs = [
    "Sphinx",
    "sphinx-click",
    "sphinx-markdown-builder",
    "watchdog",
]
perf = [
    "scalene",
]

[tool.pdm.build.targets.wheel]
packages = ["src/dipdup"]

[tool.black]
line-length = 120
target-version = ["py312"]
skip-string-normalization = true

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "E402",   # module level import not at top of file
    "E501",   # line too long
    "TCH001", # breaks our runtime Pydantic magic
    "UP040",  # PEP 695 type aliases are not yet supported by mypy
]
extend-select = ["B", "C4", "FA", "G", "I", "PTH", "Q", "RET", "RUF", "TCH", "UP"]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { force-single-line = true, known-first-party = ["dipdup"] }

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
strict = true

[tool.pytest.ini_options]
addopts="--cov-report=term-missing --cov=dipdup --cov-report=xml -n auto -s -v"
asyncio_mode = "auto"
log_cli_level = "WARNING"
filterwarnings = [
    'ignore:RemovedInMarshmallow4Warning',
    'ignore:has no models',
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "raise FrameworkException",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "if env.DEBUG:",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
