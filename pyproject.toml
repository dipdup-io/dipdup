[tool.poetry]
name = "dipdup"
description = "Python SDK for developing indexers of Tezos smart contracts inspired by The Graph"
version = "6.1.3"
license = "MIT"
authors = [
    "Lev Gorodetskiy <github@droserasprout.space>",
    "Michael Zaikin <mz@baking-bad.org>"
]
readme = "README.md"
repository = "https://github.com/dipdup-net/dipdup"
homepage = "https://dipdup.io/"
keywords = ['tezos', 'blockchain', 'sdk', 'michelson', 'indexers', 'tzkt', 'cryptocurrencies', 'smart-contracts']
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "dipdup", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

asyncpg = "0.26.0"
datamodel-code-generator = "0.13.1"
pydantic = "1.9.2"
pysignalr = "0.1.2"
tortoise-orm = "0.19.2"

aiohttp = "^3.8.1"
aiolimiter = "^1.0.0-beta.1"
anyio = "^3.3.2"
APScheduler = "^3.8.0"
asyncclick = "^8.0.1"
orjson = "^3.6.6"
prometheus-client = "^0.14.1"
pyhumps = "^3.0.2"
python-dotenv = "^0.19.0"
"ruamel.yaml" = "^0.17.2"
sentry-sdk = "^1.4.3"
sqlparse = "^0.4.2"
tabulate = "^0.8.9"

pytezos = {version = "3.7.0", optional = true}

[tool.poetry.group.dev.dependencies]
black = "*"
bump2version = "*"
diff-cover = "*"
docker = "*"
flake8-return = "*"
flake8-comprehensions = "*"
flake8-bugbear = "*"
flakeheaven = "*"
isort = "*"
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-xdist = "*"
Sphinx = "*"
sphinx-click = "*"
sphinx-markdown-builder = "*"
types-pytz = "*"
types-tabulate = "*"

[tool.poetry.extras]
pytezos = ["pytezos"]

[tool.poetry.scripts]
dipdup = "dipdup.cli:cli"

[tool.isort]
line_length = 140
force_single_line = true

[tool.black]
line-length = 140
target-version = ["py310"]
skip-string-normalization = true

[tool.flakeheaven]
max_line_length = 140

[tool.flakeheaven.plugins]
"*" = ["+*"]
pycodestyle = ["-*"]

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "ruamel"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
