# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict

from pydantic import BaseModel, Extra


class Approvals(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Balances(BaseModel):
    class Config:
        extra = Extra.allow

    approvals: Dict[str, Approvals]
    balance: str


class Metadata(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Map(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.allow

    nat: str
    map: Dict[str, Map]


class Storage(BaseModel):
    administrator: str
    balances: Dict[str, Balances]
    debtCeiling: str
    governorContractAddress: str
    metadata: Dict[str, Metadata]
    paused: bool
    token_metadata: Dict[str, TokenMetadata]
    totalSupply: str
