# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, Field


class Key(BaseModel):
    address: str
    bytes: str


class Value(BaseModel):
    confirmed: bool
    fee: str
    from_: str = Field(..., alias='from')
    releaseTime: str
    to: str
    value: str


class Swap(BaseModel):
    key: Key
    value: Value


class Bridge(BaseModel):
    lockSaver: str
    outcomes: Dict[str, str]
    swaps: List[Swap]


class Key1(BaseModel):
    address_0: str
    address_1: str


class Approval(BaseModel):
    key: Key1
    value: str


class Token(BaseModel):
    admin: str
    approvals: List[Approval]
    ledger: Dict[str, str]
    pauseGuardian: str
    paused: bool
    totalSupply: str


class TokenSTKRStorage(BaseModel):
    bridge: Bridge
    token: Token
