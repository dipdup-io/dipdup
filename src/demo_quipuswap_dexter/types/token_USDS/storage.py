# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel


class Key(BaseModel):
    address_0: str
    address_1: str


class Operator(BaseModel):
    key: Key
    value: Dict[str, Any]


class Permits1(BaseModel):
    created_at: str
    expiry: Optional[str]


class Permits(BaseModel):
    expiry: Optional[str]
    permits: Dict[str, Permits1]


class Roles(BaseModel):
    master_minter: str
    owner: str
    pauser: str
    pending_owner: Optional[str]


class TokenUSDSStorage(BaseModel):
    default_expiry: str
    ledger: Dict[str, str]
    metadata: Dict[str, str]
    minting_allowances: Dict[str, str]
    operators: List[Operator]
    paused: bool
    permit_counter: str
    permits: Dict[str, Permits]
    roles: Roles
    total_supply: str
    transferlist_contract: Optional[str]
