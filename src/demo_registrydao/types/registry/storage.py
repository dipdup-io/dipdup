# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Union

from pydantic import BaseModel, Extra


class MigrationStatu(BaseModel):
    notInMigration: Dict[str, Any]


class MigrationStatu1(BaseModel):
    migratingTo: str


class MigrationStatu2(BaseModel):
    migratedTo: str


class RegistryItem(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ExtraModel(BaseModel):
    registry: Union[int, RegistryItem]
    proposal_receivers: List[str]
    frozen_scale_value: str
    frozen_extra_value: str
    slash_scale_value: str
    slash_division_value: str
    max_proposal_size: str


class Proposal(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ProposalKeyListSortByDateItem(BaseModel):
    timestamp: str
    bytes: str


class Metadatum(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TotalSupply(BaseModel):
    class Config:
        extra = Extra.allow

    __root__: str


class Storage(BaseModel):
    ledger: Union[int, List[Any]]
    operators: Union[int, List[Any]]
    token_address: str
    admin: str
    pending_owner: str
    migration_status: Union[MigrationStatu, MigrationStatu1, MigrationStatu2]
    voting_period: str
    quorum_threshold: str
    extra: ExtraModel
    proposals: Union[int, Proposal]
    proposal_key_list_sort_by_date: List[ProposalKeyListSortByDateItem]
    permits_counter: str
    metadata: Union[int, Metadatum]
    total_supply: Dict[str, TotalSupply]
