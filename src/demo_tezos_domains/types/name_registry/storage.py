# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel


class Records(BaseModel):
    address: Optional[str]
    data: Dict[str, str]
    expiry_key: Optional[str]
    internal_data: Dict[str, str]
    level: str
    owner: str
    tzip12_token_id: Optional[str]


class ReverseRecords(BaseModel):
    internal_data: Dict[str, str]
    name: Optional[str]
    owner: str


class Store(BaseModel):
    data: Dict[str, str]
    expiry_map: Dict[str, str]
    metadata: Dict[str, str]
    next_tzip12_token_id: str
    owner: str
    records: Dict[str, Records]
    reverse_records: Dict[str, ReverseRecords]
    tzip12_tokens: Dict[str, str]


class NameRegistryStorage(BaseModel):
    actions: Dict[str, str]
    store: Store
    trusted_senders: List[str]
