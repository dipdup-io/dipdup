# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Dict
from typing import List
from typing import Union

from pydantic import BaseModel
from pydantic import Extra


class Key(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class Value(BaseModel):
    class Config:
        extra = Extra.forbid

    allowances: List[str]
    borrow: str
    lastBorrowIndex: str


class Account(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key
    value: Value


class KeyItem(BaseModel):
    class Config:
        extra = Extra.forbid

    fA12: str


class FA2(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class KeyItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    fA2: FA2


class Asset(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Union[KeyItem, KeyItem1]
    value: str


class Key1(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class LedgerItem(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key1
    value: str


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    token_id: str
    tokens: Dict[str, str]


class MainTokenItem(BaseModel):
    class Config:
        extra = Extra.forbid

    fA12: str


class FA21(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class MainTokenItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    fA2: FA21


class Tokens(BaseModel):
    class Config:
        extra = Extra.forbid

    borrowIndex: str
    borrowPause: bool
    collateralFactorF: str
    interestRateModel: str
    interestUpdateTime: str
    isInterestUpdating: bool
    lastPrice: str
    mainToken: Union[MainTokenItem, MainTokenItem1]
    maxBorrowRate: str
    priceUpdateTime: str
    reserveFactorF: str
    threshold: str
    totalBorrowsF: str
    totalLiquidF: str
    totalReservesF: str
    totalSupplyF: str


class Storage(BaseModel):
    class Config:
        extra = Extra.forbid

    accounts: List[Account]
    admin: str
    assets: List[Asset]
    borrows: Dict[str, List[str]]
    closeFactorF: str
    lastTokenId: str
    ledger: List[LedgerItem]
    liqIncentiveF: str
    markets: Dict[str, List[str]]
    maxMarkets: str
    metadata: Dict[str, str]
    priceFeedProxy: str
    tokenMetadata: Dict[str, TokenMetadata]
    tokens: Dict[str, Tokens]


class YupanaStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    storage: Storage
    tokenLambdas: Dict[str, str]
    useLambdas: Dict[str, str]
