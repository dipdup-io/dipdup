# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any

from pydantic import BaseModel
from pydantic import ConfigDict


class Key(BaseModel):
    model_config = ConfigDict(extra='forbid')

    address_0: str
    address_1: str
    nat: str


class Operator(BaseModel):
    model_config = ConfigDict(extra='forbid')

    key: Key
    value: dict[str, Any]


class TokenMetadata(BaseModel):
    model_config = ConfigDict(extra='forbid')

    token_id: str
    token_info: dict[str, str]


class Assets(BaseModel):
    model_config = ConfigDict(extra='forbid')

    ledger: dict[str, str]
    next_token_id: str
    operators: list[Operator]
    token_metadata: dict[str, TokenMetadata]


class FtzFunStorage(BaseModel):
    model_config = ConfigDict(extra='forbid')

    assets: Assets
    metadata: dict[str, str]
