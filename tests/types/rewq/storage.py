# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any

from pydantic import BaseModel
from pydantic import ConfigDict
from pydantic import Field


class MapItem(BaseModel):
    model_config = ConfigDict(extra='forbid')

    L: dict[str, str]


class MapItem1(BaseModel):
    model_config = ConfigDict(extra='forbid')

    R: dict[str, Any]


class OrItem(BaseModel):
    model_config = ConfigDict(extra='forbid')

    L: dict[str, str]


class OrItem1(BaseModel):
    model_config = ConfigDict(extra='forbid')

    R: dict[str, Any]


class RewqStorage(BaseModel):
    model_config = ConfigDict(extra='forbid')

    map: dict[str, MapItem | MapItem1]
    or_: OrItem | OrItem1 = Field(..., alias='or')
